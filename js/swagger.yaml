swagger: "2.0"
info:
  description: "API que permite la creación de un sistema de pedidos online para un restaurante. Como administrador del restaurante, podrás recibir pedidos, actualizarlos y realizarles seguimiento. Como cliente del restaurante, podrás registrarte y realizar pedidos con base a los productos que ofrecemos."
  version: "1.0.0"
  title: "Delilah Resto"
host: "localhost:7000"
basePath: "/"
tags:
- name: "User"
  description: "Endpoints para generación de usuarios"
- name: "Products"
  description: "Endpoints para generación, edición y consulta de productos"
- name: "Orders"
  description: "Endpoints para generación, edición y consulta de pedidos" 
schemes:
- "http"
paths:
  /CrearProducto:
    post:
      tags:
      - "Products"
      summary: "Crear un nuevo producto"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos"
      operationId: "CrearProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer Token"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Objeto que contiene la información del producto que se creará"
        required: true
        schema:
          $ref: "#/definitions/products"
      responses:
        "200":
          description: "Producto creado con éxito"
        "400":
          description: "Datos inválidos o incompletos"
        "401":
          description: "Acceso no autorizado"
        "403":
          description: "No cuenta con los permisos requeridos"
        "500":
          description: "Error interno del servidor"
  /ConsultarProductos:
    get:
      tags:
      - "Products"
      summary: "Consultar productos"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos"
      operationId: "ConsultarProductos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "Bearer token"
          in: "header"
          required: true
          type: "string"
      responses:
        "200":
          description: "Producto consultado con éxito"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/products"
        "400":
          description: "Datos inválidos o incompletos"
        "401":
          description: "Acceso no autorizado"
        "500":
          description: "Error interno del servidor"      
  /ModificarProducto:
    put:
      tags:
      - "Products"
      summary: "Modificar la información de un producto"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos. Adicionalmente, se debe enviar como parámetro el id del producto que se desea actualizar"
      operationId: "ModificarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"
        required: true
        type: "string"
      - in: "query"
        name: "id"
        required: true
        type: "integer"
        description: "Id del producto que se desea modificar"
      - in: "body"
        name: "body"
        description: "Objeto que contiene la información del producto a modificar"
        required: true
        schema:
          $ref: "#/definitions/products"
      responses:
        "200":
          description: "Producto modificado con éxito"
        "400":
          description: "Datos inválidos o incompletos"
        "401":
          description: "Acceso no autorizado"
        "403":
          description: "No cuenta con los permisos requeridos"
        "500":
          description: "Error interno del servidor"
  /EliminarProducto:
    delete:
      tags:
      - "Products"
      summary: "Eliminar un producto"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos. Adicionalmente, se debe enviar como parámetro el id del producto que se desea eliminar"
      operationId: "EliminarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "Bearer token"
          in: "header"
          required: true
          type: "string"
        - in: "query"
          name: "id"
          required: true
          type: "integer"
          description: "Id del producto a eliminar"
      responses:
        "200":
          description: "Producto eliminado con éxito"
        "400":
          description: "Datos inválidos o incompletos"
        "401":
          description: "Acceso no autorizado"
        "403":
          description: "No cuenta con los permisos requeridos"
        "500":
          description: "Error interno del servidor"
  /CrearPedido:
    post:
      tags:
      - "Orders"
      summary: "Crear un nuevo pedido"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos."
      operationId: "CrearPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Objeto que contiene la información del pedido que se creará"
        required: true
        schema:
          $ref: "#/definitions/newPedido"
      responses:
        "200":
          description: "Pedido creado con éxito"
        "400":
          description: "Datos inválidos o incompletos"
        "401":
          description: "Acceso no autorizado"
        "500":
          description: "Error interno del servidor"
  /ConsultarPedidos:
    get:
      tags:
      - "Orders"
      summary: "Consultar un pedido"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos."
      operationId: "ConsultarPedidos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"
        required: true
        type: "string"
      responses:
        "200":
          description: "Pedido consultado con éxito"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/orders"
        "400":
          description: "Datos inválidos o incompletos"
        "401":
          description: "Acceso no autorizado"
        "500":
          description: "Error interno del servidor"
  /ModificarPedido:
    put:
      tags:
      - "Orders"
      summary: "Modificar la información de un pedido"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos. Adicionalmente, se debe enviar como parámetro el id del pedido que se desea actualizar"
      operationId: "ModificarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"
        required: true
        type: "string"
      - in: "query"
        name: "id"
        required: true
        type: "integer"
        description: "Id del pedido que se desea modificar"
      - in: "body"
        name: "body"
        description: "Objeto que contiene la información del pedido que se modificará"
        required: true
        schema:
          $ref: "#/definitions/updatePedido"
      responses:
        "200":
          description: "Pedido actualizado con éxito"
          schema:
           $ref: '#/definitions/orders'
        "404":
          description: "Pedido no encontrado"
        "401":
          description: "Acceso no autorizado"
        "403":
          description: "No cuenta con los permisos requeridos"
        "500":
          description: "Error interno del servidor"
  /EliminarPedido:
    delete:
      tags:
      - "Orders"
      summary: "Eliminar un pedido"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos. Adicionalmente, se debe enviar como parámetro el id del pedido que se desea eliminar"
      operationId: "EliminarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"
        required: true
        type: "string"
      - in: "query"
        name: "id"
        required: true
        type: "integer"
        description: "Id del producto que se desea eliminar"
      responses:
        "200":
          description: "Pedido eliminado con éxito"
        "404":
          description: "Pedido no encontrado"
        "401":
          description: "Acceso no autorizado"
        "403":
          description: "No cuetnta con los permisos requeridos"
        "500":
          description: "Error interno del servidor"
  /Login:
    post:
      tags:
      - "User"
      summary: "Login de usuario"
      description: ""
      operationId: "LoginUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto que contiene la información del usuario que se loggeará"
        required: true
        schema:
          $ref: "#/definitions/login"
      responses:
        "401":
          description: "Usuario no registrado"
        "400":
          description: "Datos inválidos o incompletos"
        "200":
          description: "Acceso correcto"
        "500":
          description: "Error interno del servidor"
  /ConsultarUsuarios:
    get:
      tags:
      - "Orders"
      summary: "Consultar un usuario"
      description: "Para que la petición funcione de manera correcta, se hace necesario enviar en el header, en Authorization, el Bearer Token pata validar los permisos."
      operationId: "ConsultarUsuarios"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"
        required: true
        type: "string"
      responses:
        "200":
          description: "Usuario consultado con éxito"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/users"
        "400":
          description: "Datos inválidos o incompletos"
        "401":
          description: "Acceso no autorizado"
        "500":
          description: "Error interno del servidor"
  /CrearUsuario:
    post:
      tags:
      - "User"
      summary: "Crear un nuevo usuario"
      description: ""
      operationId: "CrearUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto que contiene la información del usuario que se creará"
        required: true
        schema:
          $ref: "#/definitions/users"
      responses:
        "200":
          description: "Nuevo usuario creado con éxito"
        "400":
          description: "Datos inválidos o incompletos"
        "409":
          description: "El usuario ya existe"
        "500":
          description: "Error interno del servidor"
definitions:
  products:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      description:
        type: "string"
        example: "Punta de anca"
      precio:
        type: "integer"
        format: "int64"
        example: 500
  orders:
    type: "object"
    properties:
      orderId:
        type: "integer"
        format: "int64"
        example: 2
      statusId:
        type: "integer"
        format: "int64"
        example: 3
      STATUS:
        type: "string"
        example: "Pedido Enviado"
      typepaymentId:
        type: "integer" 
        format: "int64"
        example: 4
      typepayment:
        type: "string"
        example: "Transferencia"
      quantity:
        type: "integer" 
        format: "int64"
        example: 2
      productId:
        type: "integer" 
        format: "int64"
        example: 3
      product:
        type: "string"
        example: "Punta de anca"
      price:
        type: "integer" 
        format: "int64"
        example: 22000
      userId:
        type: "integer" 
        format: "int64"
        example: 1
      fullname:
        type: "string"
        example: "Sarah Alzate"
      email:
        type: "string"
        example: "sarah@gmail.com"
      cellphone:
        type: "string"
        example: "3453452211"
      address:
        type: "string"
        example: "Calle 20"
      roleId:
        type: "integer" 
        format: "int64"
        example: 1
      role:
        type: "string"
        example: "admin"
  detOrders:
      type: "object"
      properties:
        productId:
          type: "integer"
          format: "int64"
          example: 1
        quantity:
          type: "integer"
          format: "int64"
          example: 2
  newPedido:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int64"
        example: 2
      typepaymentId:
        type: "integer"
        format: "int64"
        example: 4
      productos:
        type: "array"
        xml:
          name: "productos"
          wrapped: true
        items:
          $ref: '#/definitions/detOrders'
  updatePedido:
    type: "object"
    properties:
      statusId:
        type: "integer"
        format: "int64"
        example: 1
  users:
    type: "object"
    properties:
      user:
        type: "string"  
      nameu:
        type: "string" 
      email:
        type: "string"
        format: "email"
      cellphone:
        type: "string"        
      adress:
        type: "string"
      password:
        type: "string"
        format: "password"
      roleId:
        type: "integer"
        format: "int64"
        example: 2
  login:
    type: "object"
    properties:
      user:
        type: "string"
      pass:
        type: "string"
        format: "password"
externalDocs:
  description: "Find out more DelilahResto"
  url: "http://localhost:7000/"